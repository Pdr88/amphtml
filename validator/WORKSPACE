workspace(name = "validator")

load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")

http_archive(
    name = "com_google_absl",
    sha256 = "cd89d263643c0c1560a32157e3163e043cf4154a2111bda80a9f208aef2e833c",
    strip_prefix = "abseil-cpp-0ddbfd530c9124c21021970dfaeb2aa5ada57b51",
    urls = ["https://github.com/abseil/abseil-cpp/archive/0ddbfd530c9124c21021970dfaeb2aa5ada57b51.zip"],
)

http_archive(
    name = "com_google_googletest",
    sha256 = "263000d4afc2a7a26dd75fe23fc86535c73785984ab053b4dfb231caa76b03d6",
    strip_prefix = "googletest-89b25572dbd7668499d2cfd01dea905f8c44e019",
    urls = ["https://github.com/google/googletest/archive/89b25572dbd7668499d2cfd01dea905f8c44e019.zip"],  # 2019-01-07
)

http_archive(
    name = "com_google_protobuf",
    sha256 = "3777f311861e6541e656ef2fe375b166e6f7ec775e8aa0f3c506d938c7322e0e",
    strip_prefix = "protobuf-161989080b77a601e040a33ade3570c9bc85cada",
    urls = ["https://github.com/protocolbuffers/protobuf/archive/161989080b77a601e040a33ade3570c9bc85cada.zip"],
)
load("@com_google_protobuf//:protobuf_deps.bzl", "protobuf_deps")
protobuf_deps()

http_archive(
    name = "com_github_gflags_gflags",
    sha256 = "017e0a91531bfc45be9eaf07e4d8fed33c488b90b58509dbd2e33a33b2648ae6",
    strip_prefix = "gflags-a738fdf9338412f83ab3f26f31ac11ed3f3ec4bd",
    urls = ["https://github.com/gflags/gflags/archive/a738fdf9338412f83ab3f26f31ac11ed3f3ec4bd.zip"],
)

http_archive(
    name = "com_googlesource_code_re2",
    sha256 = "bb2b6a6bde3903fb78e8cd04dfcd4940dc4dd46215d30cf18b6d6885063b65c6",
    strip_prefix = "re2-9dc7ae7b52a17b75e3f9249ea85ba578bf42f255",
    urls = ["https://github.com/google/re2/archive/9dc7ae7b52a17b75e3f9249ea85ba578bf42f255.zip"],
)

# rules_cc defines rules for generating C++ code from Protocol Buffers.
http_archive(
    name = "rules_cc",
    sha256 = "b0d5c3a44e9ad700ca3ff0e3026c1ac39d42671dd91188f5fc2208b5cc6e290e",
    strip_prefix = "rules_cc-7771fb57dd4d044aff08c2125d3ba5c8aaeef424",
    urls = ["https://github.com/bazelbuild/rules_cc/archive/7771fb57dd4d044aff08c2125d3ba5c8aaeef424.zip"],
)
load("@rules_cc//cc:repositories.bzl", "rules_cc_dependencies")
rules_cc_dependencies()

# rules_proto defines abstract rules for building Protocol Buffers.
http_archive(
    name = "rules_proto",
    sha256 = "5d4cd6780634eb2ecafa091df8be8009d395f70a02f722e07e063883dd8af861",
    strip_prefix = "rules_proto-493169c1199dc21b9da860f7040a4502aa174676",
    urls = [
        "https://mirror.bazel.build/github.com/bazelbuild/rules_proto/archive/493169c1199dc21b9da860f7040a4502aa174676.tar.gz",
        "https://github.com/bazelbuild/rules_proto/archive/493169c1199dc21b9da860f7040a4502aa174676.tar.gz",
    ],
)
load("@rules_proto//proto:repositories.bzl", "rules_proto_dependencies", "rules_proto_toolchains")
rules_proto_dependencies()
rules_proto_toolchains()

http_archive(
    name = "emsdk",
    sha256 = "52763f556d08ba0c0cde1840102e1e5fcf828b98924c4e77f629ad1d7d400933",
    strip_prefix = "emsdk-ef2a8e929d5337755e9b1d1e1d4ad859dc694eee/bazel",
    url = "https://github.com/emscripten-core/emsdk/archive/ef2a8e929d5337755e9b1d1e1d4ad859dc694eee.tar.gz",
)

load("@emsdk//:deps.bzl", emsdk_deps = "deps")
emsdk_deps()

load("@emsdk//:emscripten_deps.bzl", emsdk_emscripten_deps = "emscripten_deps")
emsdk_emscripten_deps(emscripten_version = "2.0.31")

http_archive(
    name = "com_google_javascript_closure_library",
    sha256 = "c53ba479d0597d936b55c8f7b6177525eeb90799766067ac7378134110e7621c",
    strip_prefix = "closure-library-ccf3f1dcd7258ff413406daa45bad79277d40afd",
    urls = ["https://github.com/google/closure-library/archive/ccf3f1dcd7258ff413406daa45bad79277d40afd.tar.gz"],
)

http_archive(
    name = "io_bazel_rules_closure",
    sha256 = "9498e57368efb82b985db1ed426a767cbf1ba0398fd7aed632fc3908654e1b1e",
    strip_prefix = "rules_closure-0.12.0",
    urls = [
        "https://mirror.bazel.build/github.com/bazelbuild/rules_closure/archive/0.12.0.tar.gz",
        "https://github.com/bazelbuild/rules_closure/archive/0.12.0.tar.gz",
    ],
)

load("@io_bazel_rules_closure//closure:repositories.bzl", "rules_closure_dependencies", "rules_closure_toolchains")
rules_closure_dependencies()
rules_closure_toolchains()

local_repository(
    name = "amphtml-extensions",
    path = "../extensions",
)
